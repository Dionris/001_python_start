# Область видимости. Локальная, глобальная и встроенная область видимости

# Локальная
def s():
    # local
    a, b, c = 1, 2, 3
    # print(w) # питон не видет эту переменную, так как она обьявляется позже, но если убрать ее локальную версию то он
    # выдаст эту глобальныу переменную
    w = 'HELLO'  # изначально было 'hello' но в нутри функции мы пресваиваем другое значение этой переменной (но только
    # локально)
    print(id(w))  # проверяем айди переменной
    print(a, b, c, w)


def q():
    r, t = 1, 5
    print(r, t)
    # print(r,t,a) # не можем обращать к локальным переменным другой функции


s()  # так как мы добавили переменную в эту функцию после ее обьявления то будет ошибка
# print(a) # будет ошибка так как переменная "a" локальна внутри функции "s"
q()

# Глобальная

# global
w = 'hello'
y = 100

s()
print(w)  # видим что глобально переменная не изменилась
print(id(w))  # проверяем айди переменной

# Пример
print('\nПример:')


def k(a, b, d):  # если мы передаем параметры в функцию то они из глобальных превращаются локальные
    # local
    # a = 11
    b = 22
    # c = 33 # если ненаходит локально то ищет глобально
    d[1] = 100  # изменяет локальную и глобальную версию
    global f  # инструкция позволяющая изменить переменную глобально, если ее убрать то глобально 'f' не поменяется
    f = 4444
    print(a, b, c, d, f, 'local')


# global
a = 100
b = 200
c = 300
d = [1, 2, 3, 4]
f = 1111

k(a, b, d)
print(a, b, c, d, f, 'global')

# Пример
print('\nПример переопределения встроенных функций')

print(abs(-7))  # abs - убирает знак перед числом


def w(x):
    return x ** 2


# global
abs = w  # переопределили имя 'abs' это функция 'w'
print(abs(-7))


# local
def r():
    abs = 10
    print(abs)


r()

# Можно переопределить
min, max = max, min

# Нельзя переопределить
# True = 45
# False = 56


# Пример
print('\nПример')


def ss():
    abss = 200
    aabs = 300

    def qq():
        nonlocal aabs  # изменение для обьемлющей функции (между global и  local)
        aabs = 'Nelo'
        abss = 'hello'
        print(abss, 'qq')

    qq()
    print(abss, aabs, 'ss')


abss = [1, 2, 3, 4]
ss()
