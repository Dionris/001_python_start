# Генератор списка

a = [i ** 2 for i in range(1, 6)]
print(a)

# Выражение-генираторы
b = (i ** 2 for i in range(1, 6))  # круглые скобки делают выражение-генертор
print(b)  # видим что переменная 'b' стала генератором
print(next(b))
print(next(b))
# Генератор это итерартор элементы которого можно обойти 1 раз
# Итератор это обьект который поддерживает функцию next
# Итерируемый обьект это обьект который предоставляет возможноть обхода элементов, из него можно получить итератор ,
# например итурируемый обьект это списко

s = [1, 2, 3]  # это итурируемый объект, на нем не работает функция next
# next(s) # будет ошибка
d = iter(s)  # с помощью 'iter' мы сделали из итурируемого обьекта итератор
print(next(d))  # а теперь мы можем использовать функцию next
print(next(d))
print(next(d))

# итерировать генератор можно один раз!
print('first')  # перебераем остальные значения
for i in b:
    print(i)

print('second')  # мы видим что второй раз значения не итирируются
for i in b:
    print(i)

print(sum(b))  # так как мы уже обошли генератор то он выдает 0

# такие генераторы не хранят переменные в памяти, они их генерируют на лету. Таким образом можно вызывать большие числа

# Можно разкоментировать и проверить
c = (i for i in range(10000000000))  # 'c' - не хранит сейчас все эти элементы а на лету будет получать их
# for i in c:
#    print(i)  # таким образом мы сможет перебрать такое большое число

print(b)
print(list(b)) # можем преобразовать в список
# нельзя найти длину с помощью len()
# нельзя обратиться по индексам b[0]
